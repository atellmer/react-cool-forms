{"version":3,"file":"react-cool-forms.production.min.js","mappings":"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","sources":["webpack://ReactCoolForms/webpack/universalModuleDefinition","webpack://ReactCoolForms/external umd {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}","webpack://ReactCoolForms/webpack/bootstrap","webpack://ReactCoolForms/webpack/runtime/compat get default export","webpack://ReactCoolForms/webpack/runtime/define property getters","webpack://ReactCoolForms/webpack/runtime/hasOwnProperty shorthand","webpack://ReactCoolForms/webpack/runtime/make namespace object","webpack://ReactCoolForms/./src/utils.ts","webpack://ReactCoolForms/./src/form.tsx","webpack://ReactCoolForms/./src/field.tsx","webpack://ReactCoolForms/./src/repeater.tsx","webpack://ReactCoolForms/./src/debugger.tsx"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"ReactCoolForms\", [\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReactCoolForms\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"ReactCoolForms\"] = factory(root[\"React\"]);\n})(self, (__WEBPACK_EXTERNAL_MODULE__787__) => {\nreturn ","module.exports = __WEBPACK_EXTERNAL_MODULE__787__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const CONTEXT_ERROR = 'Context of Form not found!';\r\nconst HAS_REPEATER_VALIDATION_ERROR = 'HAS_REPEATER_VALIDATION_ERROR';\r\n\r\nfunction clone<T extends object | Array<any>>(value: T): T {\r\n  const isObject = typeof value === 'object';\r\n  const cloned = isObject ? (Array.isArray(value) ? [...value] : value ? { ...value } : value) : value;\r\n\r\n  cloned && isObject && Object.keys(cloned).forEach(key => (cloned[key] = clone(cloned[key])));\r\n\r\n  return cloned as unknown as T;\r\n}\r\n\r\nfunction detecIsFunction(value: unknown): value is Function {\r\n  return typeof value === 'function';\r\n}\r\n\r\nfunction dummy() {}\r\n\r\nfunction removePropertyValues<T extends object>(obj: T, value: any) {\r\n  Object.keys(obj).forEach(key => {\r\n    if (obj[key] === value) {\r\n      delete obj[key];\r\n    }\r\n  });\r\n}\r\n\r\nfunction hasKeys<T extends object>(obj: T): boolean {\r\n  return Object.keys(obj).length > 0;\r\n}\r\n\r\nfunction mergeArrayToObject<S, T extends object>(items: Array<T>, exclude?: string) {\r\n  const obj = {} as Record<string, S>;\r\n\r\n  for (const item of items) {\r\n    for (const key of Object.keys(item)) {\r\n      if (exclude && item[key] === exclude) continue;\r\n      obj[key] = item[key];\r\n    }\r\n  }\r\n\r\n  return obj;\r\n}\r\n\r\nfunction detectIsDeepEqual<T extends object>(o1: T, o2: T) {\r\n  return JSON.stringify(o1) === JSON.stringify(o2);\r\n}\r\n\r\nexport {\r\n  CONTEXT_ERROR,\r\n  HAS_REPEATER_VALIDATION_ERROR,\r\n  clone,\r\n  detecIsFunction,\r\n  dummy,\r\n  removePropertyValues,\r\n  hasKeys,\r\n  mergeArrayToObject,\r\n  detectIsDeepEqual,\r\n};\r\n","import React, {\r\n  createContext,\r\n  useContext,\r\n  useMemo,\r\n  useState,\r\n  useImperativeHandle,\r\n  useCallback,\r\n  useEffect,\r\n} from 'react';\r\n\r\nimport {\r\n  CONTEXT_ERROR,\r\n  HAS_REPEATER_VALIDATION_ERROR,\r\n  clone,\r\n  detecIsFunction,\r\n  hasKeys,\r\n  mergeArrayToObject,\r\n  detectIsDeepEqual,\r\n  removePropertyValues,\r\n} from './utils';\r\nimport { type SyntheticValidator } from './validators';\r\n\r\nexport type FormProps<T extends object> = {\r\n  name?: string;\r\n  initialFormValue: T;\r\n  connectedRef?: React.Ref<FormRef<T>>;\r\n  interruptValidation?: boolean;\r\n  children: (options: FormChildrenOptions<T>) => React.ReactElement;\r\n  onValidate?: (options: OnValidateOptions<T>) => void;\r\n  onChange?: (options: OnChangeOptions<T>) => void;\r\n  onUnmount?: () => void;\r\n  onLift?: (lifted: Lifted) => void;\r\n  onSubmit: (options: OnSubmitOptions<T>) => void;\r\n};\r\n\r\nfunction Form<T extends object>(props: FormProps<T>): React.ReactElement {\r\n  const {\r\n    name,\r\n    initialFormValue,\r\n    connectedRef,\r\n    interruptValidation,\r\n    children,\r\n    onValidate,\r\n    onChange,\r\n    onUnmount,\r\n    onLift,\r\n    onSubmit,\r\n  } = props;\r\n  const [formValue, setFormValue] = useState<T>(clone(initialFormValue));\r\n  const [errors, setErrors] = useState<Record<string, string>>(null);\r\n  const [inProcess, setInProcess] = useState(false);\r\n\r\n  useEffect(() => {\r\n    return () => detecIsFunction(onUnmount) && onUnmount();\r\n  }, []);\r\n\r\n  const modify = useEvent((formValue: T) => {\r\n    const newFormValue = { ...formValue };\r\n\r\n    setFormValue(newFormValue);\r\n    onChange({ formValue: newFormValue });\r\n  });\r\n\r\n  const reset = useEvent(() => {\r\n    setErrors(null);\r\n    modify(clone(initialFormValue));\r\n    setTimeout(() => {\r\n      scope.resetFns.forEach(fn => fn());\r\n    });\r\n  });\r\n\r\n  const validate = useEvent(async (formValue: T, isChild?: boolean): Promise<boolean> => {\r\n    const results: Array<boolean> = [];\r\n    const validators = scope.validators;\r\n    let newErrors: Record<string, string> = null;\r\n\r\n    setInProcess(true);\r\n\r\n    for (const validator of validators) {\r\n      const fieldValue = validator.getValue(formValue);\r\n      const isValid = await validator.method({ formValue, fieldValue });\r\n\r\n      results.push(isValid);\r\n\r\n      if (detecIsFunction(validator.onValidate)) {\r\n        validator.onValidate({ isValid, fieldValue, nodeRef: validator.nodeRef });\r\n      }\r\n\r\n      if (!isValid) {\r\n        if (!newErrors) {\r\n          newErrors = {};\r\n        }\r\n        if (!newErrors[validator.name]) {\r\n          newErrors[validator.name] = validator.message;\r\n        }\r\n        if (interruptValidation) {\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    const isValid = results.every(x => x);\r\n\r\n    if (!isValid) {\r\n      newErrors = hasKeys(newErrors) ? newErrors : null;\r\n    }\r\n\r\n    if (newErrors !== errors) {\r\n      lift({ from: 'validate', value: newErrors, skipUpdate: true });\r\n\r\n      if (isChild) {\r\n        if (!detectIsDeepEqual(newErrors, errors)) {\r\n          setErrors(newErrors);\r\n        }\r\n      } else {\r\n        lift({ from: 'validate' });\r\n      }\r\n    }\r\n\r\n    setInProcess(false);\r\n    onValidate({ formValue, errors: newErrors, isValid });\r\n\r\n    return isValid;\r\n  });\r\n\r\n  const validateField = useEvent(async (options: ValidateFieldOptions<T>): Promise<boolean> => {\r\n    const { name, formValue, validators } = options;\r\n    let failedValidator: SyntheticValidator = null;\r\n    let newErrors: Record<string, string> = { ...(errors || {}) };\r\n    const fieldErrors: Record<string, string> = { ...(errors || {}) };\r\n\r\n    for (const validator of validators) {\r\n      const fieldValue = validator.getValue(formValue);\r\n      const isValid = await validator.method({ formValue, fieldValue });\r\n\r\n      fieldErrors[name] = undefined;\r\n\r\n      if (!isValid) {\r\n        const { message } = validator;\r\n\r\n        failedValidator = validator;\r\n        newErrors[name] = message;\r\n        fieldErrors[name] = message;\r\n        break;\r\n      }\r\n    }\r\n\r\n    const isValid = !failedValidator;\r\n\r\n    if (isValid) {\r\n      if (newErrors && newErrors[name]) {\r\n        delete newErrors[name];\r\n      }\r\n    }\r\n\r\n    newErrors = hasKeys(newErrors) ? newErrors : null;\r\n\r\n    if (!detectIsDeepEqual(newErrors, errors)) {\r\n      setErrors(newErrors);\r\n      lift({ from: 'validateField', value: fieldErrors });\r\n    }\r\n\r\n    onValidate({ formValue, errors: newErrors, isValid });\r\n\r\n    return isValid;\r\n  });\r\n\r\n  const lift = useEvent((lifted: Lifted) => {\r\n    if (detecIsFunction(onLift)) {\r\n      onLift(lifted);\r\n    } else {\r\n      const map: Record<Lifted['from'], () => void> = {\r\n        validate: () => {\r\n          const { skipUpdate } = lifted;\r\n          const liftedErrors = lifted.value as Record<string, string>;\r\n\r\n          if (skipUpdate) {\r\n            scope.accumulatedErrors.push(liftedErrors);\r\n          } else {\r\n            const errors = scope.accumulatedErrors.filter(Boolean);\r\n            const mergedErrors = mergeArrayToObject<string, {}>(errors, HAS_REPEATER_VALIDATION_ERROR);\r\n            const newErrors = hasKeys(mergedErrors) ? mergedErrors : null;\r\n\r\n            scope.accumulatedErrors = [];\r\n            setErrors(newErrors);\r\n          }\r\n        },\r\n        validateField: () => {\r\n          const liftedErrors = lifted.value as Record<string, string | undefined>;\r\n          const keys = Object.keys(liftedErrors);\r\n          let newErrors: Record<string, string> = { ...(errors || {}) };\r\n\r\n          for (const key of keys) {\r\n            if (liftedErrors[key] !== HAS_REPEATER_VALIDATION_ERROR) {\r\n              newErrors[key] = liftedErrors[key];\r\n            }\r\n          }\r\n\r\n          removePropertyValues(newErrors, undefined);\r\n          newErrors = hasKeys(newErrors) ? newErrors : null;\r\n\r\n          if (!detectIsDeepEqual(newErrors, errors)) {\r\n            setErrors(newErrors);\r\n          }\r\n        },\r\n      };\r\n\r\n      map[lifted.from] && map[lifted.from]();\r\n    }\r\n  });\r\n\r\n  const submit = useEvent(async () => {\r\n    const isValid = await validate(formValue);\r\n\r\n    isValid && onSubmit({ formValue });\r\n  });\r\n\r\n  const addValidator = useEvent((validator: SyntheticValidator) => {\r\n    scope.validators.push(validator);\r\n  });\r\n\r\n  const removeValidator = useEvent((validator: SyntheticValidator) => {\r\n    const idx = scope.validators.findIndex(x => x === validator);\r\n\r\n    if (idx !== -1) {\r\n      scope.validators.splice(idx, 1);\r\n    }\r\n  });\r\n\r\n  const addResetFn = useEvent((fn: () => void) => {\r\n    scope.resetFns.push(fn);\r\n  });\r\n\r\n  const removeResetFn = useEvent((fn: () => void) => {\r\n    const idx = scope.resetFns.findIndex(x => x === fn);\r\n\r\n    if (idx !== -1) {\r\n      scope.resetFns.splice(idx, 1);\r\n    }\r\n  });\r\n\r\n  const scope = useMemo<FormScope<T>>(\r\n    () => ({\r\n      formValue,\r\n      errors,\r\n      inProcess,\r\n      modify,\r\n      validate,\r\n      validateField,\r\n      submit,\r\n      reset,\r\n      addValidator,\r\n      removeValidator,\r\n      addResetFn,\r\n      removeResetFn,\r\n      lift,\r\n      validators: [],\r\n      resetFns: [],\r\n      accumulatedErrors: [],\r\n    }),\r\n    [],\r\n  );\r\n\r\n  scope.formValue = formValue;\r\n  scope.errors = errors;\r\n  scope.inProcess = inProcess;\r\n  scope.modify = modify;\r\n  scope.validate = validate;\r\n  scope.validateField = validateField;\r\n  scope.submit = submit;\r\n  scope.reset = reset;\r\n  scope.addValidator = addValidator;\r\n  scope.removeValidator = removeValidator;\r\n  scope.addResetFn = addResetFn;\r\n  scope.removeResetFn = removeResetFn;\r\n  scope.lift = lift;\r\n\r\n  const value = useMemo<FormStateContextValue<T>>(() => ({ scope }), [formValue, errors]);\r\n\r\n  useImperativeHandle(connectedRef, () => {\r\n    const ref: FormRef<T> = {\r\n      getFormValue: () => formValue,\r\n      modify,\r\n      validate,\r\n      submit,\r\n      reset,\r\n    };\r\n\r\n    return ref;\r\n  });\r\n\r\n  return (\r\n    <FormStateContext.Provider value={value}>\r\n      {children({ formValue, errors, inProcess, validate, reset, submit })}\r\n    </FormStateContext.Provider>\r\n  );\r\n}\r\n\r\nconst FormComponent: React.FC<FormProps<{}>> = Form;\r\n\r\nFormComponent.defaultProps = {\r\n  onValidate: () => {},\r\n  onChange: () => {},\r\n};\r\n\r\nconst FormStateContext = createContext<FormStateContextValue>(null);\r\n\r\nfunction useFormContext<T extends object>() {\r\n  const value = useContext<FormStateContextValue<T>>(FormStateContext);\r\n\r\n  if (!value) {\r\n    throw new Error(CONTEXT_ERROR);\r\n  }\r\n\r\n  return value;\r\n}\r\n\r\nfunction useFormState<T extends object>() {\r\n  const { scope } = useFormContext<T>();\r\n\r\n  return { ...scope };\r\n}\r\n\r\nfunction useEvent<T extends (...args) => any>(fn: T) {\r\n  const scope = useMemo(() => ({ fn }), []);\r\n\r\n  scope.fn = fn;\r\n\r\n  const callback = useCallback((...args) => {\r\n    return scope.fn(...args);\r\n  }, []);\r\n\r\n  return callback as unknown as T;\r\n}\r\n\r\nexport type FormRef<T extends object> = {\r\n  getFormValue: () => T;\r\n  modify: (formValue: T) => void;\r\n  validate: (formValue: T, isChild?: boolean) => Promise<boolean>;\r\n  submit: () => void;\r\n  reset: () => void;\r\n};\r\n\r\nexport type FormScope<T extends object> = {\r\n  formValue: T;\r\n  errors: Record<string, string> | null;\r\n  inProcess: boolean;\r\n  validators: Array<SyntheticValidator>;\r\n  resetFns: Array<() => void>;\r\n  addValidator: (validator: SyntheticValidator) => void;\r\n  removeValidator: (validator: SyntheticValidator) => void;\r\n  addResetFn: (fn: () => void) => void;\r\n  removeResetFn: (fn: () => void) => void;\r\n  validateField: (options: ValidateFieldOptions<T>) => Promise<boolean>;\r\n  lift: (lifted: Lifted) => void;\r\n  accumulatedErrors: Array<Record<string, string>>;\r\n} & Pick<FormRef<T>, 'modify' | 'validate' | 'submit' | 'reset'>;\r\n\r\ntype ValidateFieldOptions<T extends object> = {\r\n  name: string;\r\n  formValue: T;\r\n  validators: Array<SyntheticValidator>;\r\n};\r\n\r\ntype FormStateContextValue<T extends object = any> = {\r\n  scope: FormScope<T>;\r\n};\r\n\r\ntype SharedCallbackOptions<T extends object> = {\r\n  formValue: T;\r\n};\r\n\r\nexport type FormChildrenOptions<T extends object> = {\r\n  errors: Record<string, string>;\r\n  inProcess: boolean;\r\n} & SharedCallbackOptions<T> &\r\n  Pick<FormRef<T>, 'validate' | 'submit' | 'reset'>;\r\n\r\nexport type OnSubmitOptions<T extends object> = {} & SharedCallbackOptions<T>;\r\n\r\nexport type OnValidateOptions<T extends object> = {\r\n  isValid: boolean;\r\n  errors: Record<string, string> | null;\r\n} & SharedCallbackOptions<T>;\r\n\r\nexport type OnChangeOptions<T extends object> = {} & SharedCallbackOptions<T>;\r\n\r\ntype Lifted<T = unknown> = {\r\n  from: 'validateField' | 'validate';\r\n  value?: T;\r\n  skipUpdate?: boolean;\r\n};\r\n\r\nexport { Form, useFormContext, useFormState, useEvent };\r\n","import React, { memo, useEffect, useMemo, useRef } from 'react';\r\n\r\nimport { useFormContext, useEvent } from './form';\r\nimport { type Validator, type SyntheticValidator, type OnValidateFieldOptions } from './validators';\r\n\r\nexport type FieldProps<T, S extends object> = {\r\n  name: string;\r\n  getValue: (formValue: S) => T;\r\n  setValue: (formValue: S, fieldValue: T) => void;\r\n  validators?: Array<Validator<T, S>>;\r\n  updatingKey?: string | number;\r\n  enableOnChangeValidation?: boolean;\r\n  children: (options: FieldChildrenOptions<T>) => React.ReactElement;\r\n  onValidate?: (options: OnValidateFieldOptions<T>) => void;\r\n};\r\n\r\nfunction Field<T, S extends object>(props: FieldProps<T, S>): React.ReactElement {\r\n  const {\r\n    name,\r\n    getValue,\r\n    setValue,\r\n    validators: sourceValidators = [],\r\n    updatingKey: externalUpdatingKey = '',\r\n    enableOnChangeValidation,\r\n    onValidate,\r\n  } = props;\r\n  const { scope: formScope } = useFormContext<S>();\r\n  const { formValue, errors, inProcess, addValidator, removeValidator } = formScope;\r\n  const nodeRef = useRef<HTMLElement>(null);\r\n  const value = getValue(formValue);\r\n  const error = errors ? errors[name] || null : null;\r\n  const valueID = useMemo(() => getNextValueID(), [value]);\r\n  const scope = useMemo<FieldScope>(() => ({ nodeRef, validators: [], onValidate }), []);\r\n  const updatingKey = `${externalUpdatingKey}:${valueID}:${error}:${inProcess}`;\r\n\r\n  scope.nodeRef = nodeRef;\r\n  scope.onValidate = onValidate;\r\n\r\n  const createValidators = () => {\r\n    const validators: Array<SyntheticValidator> = sourceValidators.map(validator => {\r\n      return {\r\n        ...validator,\r\n        name,\r\n        getValue,\r\n        nodeRef: scope.nodeRef,\r\n        onValidate: scope.onValidate,\r\n      };\r\n    });\r\n\r\n    return validators;\r\n  };\r\n\r\n  useEffect(() => {\r\n    scope.validators = createValidators();\r\n    scope.validators.forEach(x => addValidator(x));\r\n\r\n    return () => {\r\n      scope.validators.forEach(x => removeValidator(x));\r\n      scope.validators = [];\r\n    };\r\n  }, []);\r\n\r\n  const handleChange = useEvent((value: T) => {\r\n    const { formValue, modify } = formScope;\r\n\r\n    setValue(formValue, value);\r\n    modify(formValue);\r\n    enableOnChangeValidation && (async () => await validate())();\r\n  });\r\n\r\n  const validate = useEvent(async (): Promise<boolean> => {\r\n    const { formValue, validateField } = formScope;\r\n    const validators = scope.validators;\r\n    const isValid =\r\n      validators.length === 0 ? await Promise.resolve(true) : await validateField({ name, formValue, validators });\r\n\r\n    return isValid;\r\n  });\r\n\r\n  return (\r\n    <FieldInner\r\n      {...props}\r\n      updatingKey={updatingKey}\r\n      nodeRef={nodeRef}\r\n      value={value}\r\n      error={error}\r\n      validate={validate}\r\n      onChange={handleChange}\r\n    />\r\n  );\r\n}\r\n\r\nconst FieldComponent: React.FC<FieldProps<unknown, {}>> = Field;\r\n\r\nFieldComponent.defaultProps = {\r\n  onValidate: () => {},\r\n};\r\n\r\ntype FieldScope = {\r\n  nodeRef: React.RefObject<any>;\r\n  validators: Array<SyntheticValidator>;\r\n  onValidate: (options: OnValidateFieldOptions<any>) => void;\r\n};\r\n\r\nexport type FieldInnerProps<T, S extends object> = {\r\n  updatingKey: string;\r\n} & FieldProps<T, S> &\r\n  FieldChildrenOptions<T>;\r\n\r\nconst FieldInner = memo(\r\n  function <T, S extends object>(props: FieldInnerProps<T, S>): React.ReactElement {\r\n    const { name, nodeRef, value, error, children, validate, onChange } = props;\r\n\r\n    return children({ name, nodeRef, value, error, validate, onChange });\r\n  },\r\n  (prevProps, nextProps) => prevProps.updatingKey === nextProps.updatingKey,\r\n);\r\n\r\nexport type FieldChildrenOptions<T> = {\r\n  name: string;\r\n  value: T;\r\n  error: string | null;\r\n  validate: () => Promise<boolean>;\r\n  onChange: (value: T) => void;\r\n} & Pick<OnValidateFieldOptions<T>, 'nodeRef'>;\r\n\r\nlet nextValueID = 0;\r\n\r\nconst getNextValueID = () => ++nextValueID;\r\n\r\nexport { Field, type OnValidateFieldOptions };\r\n","import React, { useRef, useEffect, useMemo } from 'react';\r\n\r\nimport { Form, useFormContext, useEvent, type OnChangeOptions, type FormRef, type FormChildrenOptions } from './form';\r\nimport { HAS_REPEATER_VALIDATION_ERROR, detecIsFunction, dummy } from './utils';\r\nimport { type SyntheticValidator } from './validators';\r\n\r\nexport type RepeaterProps<T extends object, S extends object> = {\r\n  name: string;\r\n  getValue: (formValue: S) => Array<T>;\r\n  setValue: (formValue: S, fieldValue: Array<T>) => void;\r\n  getKey: (formValue: T) => string | number;\r\n  interruptValidation?: boolean;\r\n  tringgerPosition?: 'before' | 'after';\r\n  renderTrigger?: (options: RenderTriggerOptions<T>) => React.ReactElement;\r\n  children: (options: RepeaterChildrenOptions<T>) => React.ReactElement;\r\n};\r\n\r\nfunction Repeater<T extends object, S extends object>(props: RepeaterProps<T, S>): React.ReactElement {\r\n  const { name, getValue, setValue, getKey, interruptValidation, renderTrigger, tringgerPosition, children } = props;\r\n  const { scope: formScope } = useFormContext<S>();\r\n  const { formValue, modify, inProcess, addValidator, removeValidator, addResetFn, removeResetFn, lift } = formScope;\r\n  const items = getValue(formValue);\r\n  const formRefs = useRef<Array<FormRef<any>>>([]);\r\n  const scope = useMemo(() => ({ shouldFocusIdx: -1 }), []);\r\n\r\n  useEffect(() => {\r\n    const method = async () => {\r\n      const results: Array<boolean> = [];\r\n      const refs = formRefs.current.filter(Boolean);\r\n\r\n      for (const ref of refs) {\r\n        const isValid = await ref.validate(ref.getFormValue(), true);\r\n\r\n        results.push(isValid);\r\n\r\n        if (!isValid && interruptValidation) {\r\n          break;\r\n        }\r\n      }\r\n\r\n      const isValid = results.every(x => x);\r\n\r\n      return isValid;\r\n    };\r\n\r\n    const validator: SyntheticValidator = {\r\n      name,\r\n      method,\r\n      message: HAS_REPEATER_VALIDATION_ERROR,\r\n      getValue: () => null,\r\n    };\r\n\r\n    addValidator(validator);\r\n\r\n    return () => removeValidator(validator);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const resetFn = () => {\r\n      const refs = formRefs.current.filter(Boolean);\r\n\r\n      refs.forEach(ref => ref.reset());\r\n    };\r\n\r\n    addResetFn(resetFn);\r\n\r\n    return () => removeResetFn(resetFn);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    scope.shouldFocusIdx = -1;\r\n  });\r\n\r\n  const handleUnmount = (idx: number) => () => {\r\n    formRefs.current.splice(idx, 1);\r\n  };\r\n\r\n  const handleChange =\r\n    (idx: number) =>\r\n    ({ formValue: item }: OnChangeOptions<T>) => {\r\n      const items = getValue(formValue);\r\n\r\n      items[idx] = item;\r\n      setValue(formValue, items);\r\n      modify(formValue);\r\n    };\r\n\r\n  const append = useEvent((item: T, shouldFocus?: boolean) => {\r\n    const items = getValue(formValue);\r\n\r\n    items.push(item);\r\n    setValue(formValue, items);\r\n    modify(formValue);\r\n    shouldFocus && (scope.shouldFocusIdx = items.length - 1);\r\n  });\r\n\r\n  const prepend = useEvent((item: T, shouldFocus?: boolean) => {\r\n    const items = getValue(formValue);\r\n\r\n    items.unshift(item);\r\n    setValue(formValue, items);\r\n    modify(formValue);\r\n    shouldFocus && (scope.shouldFocusIdx = 0);\r\n  });\r\n\r\n  const insert = useEvent((idx: number, item: T, shouldFocus?: boolean) => {\r\n    const items = getValue(formValue);\r\n\r\n    items.splice(idx, 0, item);\r\n    setValue(formValue, items);\r\n    modify(formValue);\r\n    shouldFocus && (scope.shouldFocusIdx = idx);\r\n  });\r\n\r\n  const swap = useEvent((from: number, to: number) => {\r\n    const items = getValue(formValue);\r\n    const itemFrom = items[from];\r\n    const itemTo = items[to];\r\n\r\n    if (!itemFrom || !itemTo) return;\r\n\r\n    items[from] = itemTo;\r\n    items[to] = itemFrom;\r\n    setValue(formValue, items);\r\n    modify(formValue);\r\n  });\r\n\r\n  const remove = useEvent((sourceIdx: number | Array<number>) => {\r\n    const idxs = Array.isArray(sourceIdx) ? sourceIdx : [sourceIdx];\r\n    const items = getValue(formValue);\r\n\r\n    for (const idx of idxs) {\r\n      items.splice(idx, 1);\r\n    }\r\n\r\n    setValue(formValue, items);\r\n    modify(formValue);\r\n  });\r\n\r\n  const isAfter = tringgerPosition === 'after';\r\n  const isBefore = !isAfter;\r\n  const isSingle = items.length === 1;\r\n  const size = items.length;\r\n\r\n  return (\r\n    <>\r\n      {isBefore &&\r\n        detecIsFunction(renderTrigger) &&\r\n        renderTrigger({ size, append, prepend, insert, swap, remove, inProcess })}\r\n      {items.map((item, idx) => {\r\n        const key = getKey(item);\r\n        const isFirst = idx === 0;\r\n        const isLast = idx === items.length - 1;\r\n        const isEven = idx % 2 === 0;\r\n        const isOdd = !isEven;\r\n        const shouldFocus = scope.shouldFocusIdx === idx;\r\n\r\n        return (\r\n          <Form\r\n            key={key}\r\n            connectedRef={ref => (formRefs.current[idx] = ref)}\r\n            initialFormValue={item}\r\n            onChange={handleChange(idx)}\r\n            onUnmount={handleUnmount(idx)}\r\n            onLift={lift}\r\n            onSubmit={dummy}>\r\n            {({ formValue, errors, inProcess }) => {\r\n              return children({\r\n                idx,\r\n                isFirst,\r\n                isLast,\r\n                isEven,\r\n                isOdd,\r\n                isSingle,\r\n                size,\r\n                shouldFocus,\r\n                formValue,\r\n                errors,\r\n                inProcess,\r\n                remove,\r\n              });\r\n            }}\r\n          </Form>\r\n        );\r\n      })}\r\n      {isAfter &&\r\n        detecIsFunction(renderTrigger) &&\r\n        renderTrigger({ size, append, prepend, insert, swap, remove, inProcess })}\r\n    </>\r\n  );\r\n}\r\n\r\nconst RepeaterComponent: React.FC<RepeaterProps<{}, {}>> = Repeater;\r\n\r\nRepeaterComponent.defaultProps = {\r\n  tringgerPosition: 'after',\r\n};\r\n\r\nexport type RepeaterChildrenOptions<T extends object> = {\r\n  idx: number;\r\n  isFirst: boolean;\r\n  isLast: boolean;\r\n  isEven: boolean;\r\n  isOdd: boolean;\r\n  isSingle: boolean;\r\n  size: number;\r\n  shouldFocus: boolean;\r\n  remove: (idx: number | Array<number>) => void;\r\n} & Pick<FormChildrenOptions<T>, 'formValue' | 'errors' | 'inProcess'>;\r\n\r\nexport type RenderTriggerOptions<T extends object> = {\r\n  size: number;\r\n  append: (item: T, shouldFocus?: boolean) => void;\r\n  prepend: (item: T, shouldFocus?: boolean) => void;\r\n  insert: (idx: number, item: T, shouldFocus?: boolean) => void;\r\n  swap: (from: number, to: number) => void;\r\n} & Pick<FormChildrenOptions<T>, 'inProcess'> &\r\n  Pick<RepeaterChildrenOptions<T>, 'remove'>;\r\n\r\nexport { Repeater };\r\n","import React, { useMemo } from 'react';\r\n\r\nimport { useFormState } from './form';\r\n\r\nexport type DebuggerProps = {};\r\n\r\nconst Debugger: React.FC<DebuggerProps> = () => {\r\n  const { formValue, errors } = useFormState();\r\n  const style: React.CSSProperties = useMemo(\r\n    () => ({\r\n      display: 'block',\r\n      backgroundColor: '#efefef',\r\n      padding: 16,\r\n      marginTop: 16,\r\n      marginBottom: 16,\r\n    }),\r\n    [],\r\n  );\r\n  const value = useMemo(\r\n    () =>\r\n      JSON.stringify(\r\n        {\r\n          errors,\r\n          formValue,\r\n        },\r\n        null,\r\n        2,\r\n      ),\r\n    [formValue, errors],\r\n  );\r\n\r\n  return <pre style={style}>{value}</pre>;\r\n};\r\n\r\nexport { Debugger };\r\n"],"names":["root","factory","exports","module","require","define","amd","self","__WEBPACK_EXTERNAL_MODULE__787__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","HAS_REPEATER_VALIDATION_ERROR","clone","isObject","cloned","Array","isArray","keys","forEach","detecIsFunction","dummy","hasKeys","length","detectIsDeepEqual","o1","o2","JSON","stringify","Form","props","initialFormValue","connectedRef","interruptValidation","children","onValidate","onChange","onUnmount","onLift","onSubmit","useState","formValue","setFormValue","errors","setErrors","inProcess","setInProcess","useEffect","modify","useEvent","newFormValue","reset","setTimeout","scope","resetFns","fn","validate","isChild","results","validators","newErrors","validator","fieldValue","getValue","method","push","isValid","nodeRef","name","message","every","x","lift","from","skipUpdate","validateField","options","failedValidator","fieldErrors","lifted","map","liftedErrors","accumulatedErrors","mergedErrors","items","exclude","item","mergeArrayToObject","filter","Boolean","submit","addValidator","removeValidator","idx","findIndex","splice","addResetFn","removeResetFn","useMemo","useImperativeHandle","getFormValue","FormStateContext","Provider","defaultProps","createContext","useFormContext","useContext","Error","useFormState","callback","useCallback","args","Field","setValue","sourceValidators","externalUpdatingKey","enableOnChangeValidation","formScope","useRef","error","valueID","getNextValueID","updatingKey","handleChange","Promise","resolve","FieldInner","memo","prevProps","nextProps","nextValueID","Repeater","getKey","renderTrigger","tringgerPosition","formRefs","shouldFocusIdx","refs","current","ref","resetFn","handleUnmount","append","shouldFocus","prepend","unshift","insert","swap","to","itemFrom","itemTo","remove","sourceIdx","idxs","isAfter","isBefore","isSingle","size","isFirst","isLast","isEven","isOdd","Debugger","style","display","backgroundColor","padding","marginTop","marginBottom"],"sourceRoot":""}