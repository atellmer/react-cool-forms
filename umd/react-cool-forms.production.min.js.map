{"version":3,"file":"react-cool-forms.production.min.js","mappings":"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","sources":["webpack://ReactCoolForms/webpack/universalModuleDefinition","webpack://ReactCoolForms/external umd {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}","webpack://ReactCoolForms/webpack/bootstrap","webpack://ReactCoolForms/webpack/runtime/compat get default export","webpack://ReactCoolForms/webpack/runtime/define property getters","webpack://ReactCoolForms/webpack/runtime/hasOwnProperty shorthand","webpack://ReactCoolForms/webpack/runtime/make namespace object","webpack://ReactCoolForms/./src/utils.ts","webpack://ReactCoolForms/./src/context.ts","webpack://ReactCoolForms/./src/hooks.ts","webpack://ReactCoolForms/./src/form.tsx","webpack://ReactCoolForms/./src/field.tsx","webpack://ReactCoolForms/./src/repeater.tsx","webpack://ReactCoolForms/./src/debugger.tsx"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"ReactCoolForms\", [\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReactCoolForms\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"ReactCoolForms\"] = factory(root[\"React\"]);\n})(self, (__WEBPACK_EXTERNAL_MODULE__787__) => {\nreturn ","module.exports = __WEBPACK_EXTERNAL_MODULE__787__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const CONTEXT_ERROR = 'Context of Form not found!';\r\nconst HAS_REPEATER_VALIDATION_ERROR = 'HAS_REPEATER_VALIDATION_ERROR';\r\n\r\nfunction clone<T extends object | Array<any>>(value: T): T {\r\n  const isObject = typeof value === 'object';\r\n  const cloned = isObject ? (Array.isArray(value) ? [...value] : value ? { ...value } : value) : value;\r\n\r\n  cloned && isObject && Object.keys(cloned).forEach(key => (cloned[key] = clone(cloned[key])));\r\n\r\n  return cloned as unknown as T;\r\n}\r\n\r\nfunction detecIsFunction(value: unknown): value is Function {\r\n  return typeof value === 'function';\r\n}\r\n\r\nfunction dummy() {}\r\n\r\nfunction removePropertyValues<T extends object>(obj: T, value: any) {\r\n  Object.keys(obj).forEach(key => {\r\n    if (obj[key] === value) {\r\n      delete obj[key];\r\n    }\r\n  });\r\n}\r\n\r\nfunction hasKeys<T extends object>(obj: T): boolean {\r\n  return Object.keys(obj).length > 0;\r\n}\r\n\r\nfunction mergeArrayToObject<S, T extends object>(items: Array<T>, exclude?: string) {\r\n  const obj = {} as Record<string, S>;\r\n\r\n  for (const item of items) {\r\n    for (const key of Object.keys(item)) {\r\n      if (exclude && item[key] === exclude) continue;\r\n      obj[key] = item[key];\r\n    }\r\n  }\r\n\r\n  return obj;\r\n}\r\n\r\nfunction detectIsDeepEqual<T extends object>(o1: T, o2: T) {\r\n  return JSON.stringify(o1) === JSON.stringify(o2);\r\n}\r\n\r\nfunction transformOjectToArray<T>(obj: Record<string, T>) {\r\n  const items: Array<T> = [];\r\n  const keys = Object.keys(obj);\r\n\r\n  for (const key of keys) {\r\n    items.push(obj[key]);\r\n  }\r\n\r\n  return items;\r\n}\r\n\r\nexport {\r\n  CONTEXT_ERROR,\r\n  HAS_REPEATER_VALIDATION_ERROR,\r\n  clone,\r\n  detecIsFunction,\r\n  dummy,\r\n  removePropertyValues,\r\n  hasKeys,\r\n  mergeArrayToObject,\r\n  detectIsDeepEqual,\r\n  transformOjectToArray,\r\n};\r\n","import { createContext, useContext } from 'react';\r\n\r\nimport { type FormState } from './form';\r\nimport { CONTEXT_ERROR } from './utils';\r\n\r\nexport type FormContextValue<T extends object = any> = {\r\n  state: FormState<T>;\r\n};\r\n\r\nconst FormContext = createContext<FormContextValue>(null);\r\n\r\nfunction useFormContext<T extends object>() {\r\n  const value = useContext<FormContextValue<T>>(FormContext);\r\n\r\n  if (!value) {\r\n    throw new Error(CONTEXT_ERROR);\r\n  }\r\n\r\n  return value;\r\n}\r\n\r\nexport { FormContext, useFormContext };\r\n","import { useMemo, useState, useCallback, useEffect } from 'react';\r\n\r\nimport { useFormContext } from './context';\r\n\r\nfunction useEvent<T extends (...args) => any>(fn: T) {\r\n  const scope = useMemo(() => ({ fn }), []);\r\n\r\n  scope.fn = fn;\r\n\r\n  const callback = useCallback((...args) => {\r\n    return scope.fn(...args);\r\n  }, []);\r\n\r\n  return callback as unknown as T;\r\n}\r\n\r\nfunction useUpdate() {\r\n  const [_, forceUpdate] = useState(0);\r\n  const update = useCallback(() => forceUpdate(x => x + 1), []);\r\n\r\n  return { update };\r\n}\r\n\r\nfunction useFormState<T extends object>() {\r\n  const { state: scope } = useFormContext<T>();\r\n  const { update } = useUpdate();\r\n  const {\r\n    formValue,\r\n    errors,\r\n    inProcess,\r\n    addSubscriber,\r\n    removeSubscriber,\r\n    addValidator,\r\n    removeValidator,\r\n    modify,\r\n    validate: sourceValidate,\r\n    submit,\r\n    reset,\r\n  } = scope;\r\n  const validate = useEvent((formValue: T) => sourceValidate(formValue));\r\n\r\n  useEffect(() => {\r\n    addSubscriber(update);\r\n\r\n    return () => removeSubscriber(update);\r\n  }, []);\r\n\r\n  return {\r\n    formValue,\r\n    errors,\r\n    inProcess,\r\n    addSubscriber,\r\n    removeSubscriber,\r\n    addValidator,\r\n    removeValidator,\r\n    modify,\r\n    validate,\r\n    submit,\r\n    reset,\r\n  };\r\n}\r\n\r\nexport { useEvent, useUpdate, useFormState };\r\n","import React, { useMemo, useState, useImperativeHandle, useEffect } from 'react';\r\n\r\nimport { FormContext, type FormContextValue } from './context';\r\nimport {\r\n  HAS_REPEATER_VALIDATION_ERROR,\r\n  clone,\r\n  detecIsFunction,\r\n  hasKeys,\r\n  mergeArrayToObject,\r\n  detectIsDeepEqual,\r\n  removePropertyValues,\r\n} from './utils';\r\nimport { type SyntheticValidator } from './validators';\r\nimport { useEvent, useUpdate } from './hooks';\r\n\r\nexport type FormProps<T extends object> = {\r\n  name?: string; // for internal use\r\n  initialFormValue: T;\r\n  connectedRef?: React.Ref<FormRef<T>>;\r\n  interruptValidation?: boolean;\r\n  children: (options: FormChildrenOptions<T>) => React.ReactElement;\r\n  onValidate?: (options: OnValidateOptions<T>) => void;\r\n  onChange?: (options: OnChangeOptions<T>) => void;\r\n  onUnmount?: () => void; // for internal use\r\n  onLift?: (lifted: Lifted) => void; // for internal use\r\n  onSubmit: (options: OnSubmitOptions<T>) => void;\r\n};\r\n\r\nfunction Form<T extends object>(props: FormProps<T>): React.ReactElement {\r\n  const {\r\n    name,\r\n    initialFormValue,\r\n    connectedRef,\r\n    interruptValidation,\r\n    children,\r\n    onValidate,\r\n    onChange,\r\n    onUnmount,\r\n    onLift,\r\n    onSubmit,\r\n  } = props;\r\n  const { update } = useUpdate();\r\n  const [errors, setErrors] = useState<Record<string, string>>(null);\r\n  const [inProcess, setInProcess] = useState(false);\r\n  const scope = useMemo(() => ({ formValue: clone(initialFormValue) }), []);\r\n  const formValue = scope.formValue;\r\n\r\n  useEffect(() => {\r\n    return () => detecIsFunction(onUnmount) && onUnmount();\r\n  }, []);\r\n\r\n  const modify = useEvent((formValue: T) => {\r\n    scope.formValue = { ...formValue };\r\n\r\n    update();\r\n    onChange({ formValue: scope.formValue });\r\n  });\r\n\r\n  const notify = useEvent((formValue: T) => {\r\n    scope.formValue = { ...formValue };\r\n    const isRoot = !onLift;\r\n\r\n    onChange({ formValue: scope.formValue });\r\n\r\n    if (isRoot) {\r\n      state.formValue = scope.formValue;\r\n      state.subscribers.forEach(fn => fn());\r\n    }\r\n  });\r\n\r\n  const reset = useEvent(() => {\r\n    setErrors(null);\r\n    modify(clone(initialFormValue));\r\n    setTimeout(() => {\r\n      state.resetFns.forEach(fn => fn());\r\n    });\r\n  });\r\n\r\n  const validate = useEvent((formValue: T, isChild?: boolean): Promise<boolean> => {\r\n    const results: Array<boolean> = [];\r\n    const validators = state.validators;\r\n    let newErrors: Record<string, string> = null;\r\n\r\n    setInProcess(true);\r\n\r\n    const process = async () => {\r\n      for (const validator of validators) {\r\n        const fieldValue = validator.getValue(formValue);\r\n        const isValid = await validator.method({ formValue, fieldValue });\r\n\r\n        results.push(isValid);\r\n\r\n        if (detecIsFunction(validator.onValidate)) {\r\n          validator.onValidate({ isValid, fieldValue, nodeRef: validator.nodeRef });\r\n        }\r\n\r\n        if (!isValid) {\r\n          if (!newErrors) {\r\n            newErrors = {};\r\n          }\r\n          if (!newErrors[validator.name]) {\r\n            newErrors[validator.name] = validator.message;\r\n          }\r\n          if (interruptValidation) {\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      const isValid = results.every(x => x);\r\n\r\n      if (!isValid) {\r\n        newErrors = hasKeys(newErrors) ? newErrors : null;\r\n      }\r\n\r\n      if (newErrors !== errors) {\r\n        lift({ from: 'validate', value: newErrors, skipUpdate: true });\r\n\r\n        if (isChild) {\r\n          if (!detectIsDeepEqual(newErrors, errors)) {\r\n            setErrors(newErrors);\r\n          }\r\n        } else {\r\n          lift({ from: 'validate' });\r\n        }\r\n      }\r\n\r\n      setInProcess(false);\r\n      onValidate({ formValue, errors: newErrors, isValid });\r\n\r\n      return isValid;\r\n    };\r\n\r\n    return new Promise<boolean>(async resolve => {\r\n      if (isChild) {\r\n        resolve(await process());\r\n      } else {\r\n        requestAnimationFrame(async () => {\r\n          resolve(await process());\r\n        });\r\n      }\r\n    });\r\n  });\r\n\r\n  const validateField = useEvent(async (options: ValidateFieldOptions<T>): Promise<boolean> => {\r\n    const { name, formValue, validators } = options;\r\n    let failedValidator: SyntheticValidator = null;\r\n    let newErrors: Record<string, string> = { ...(errors || {}) };\r\n    const fieldErrors: Record<string, string> = { ...(errors || {}) };\r\n\r\n    for (const validator of validators) {\r\n      const fieldValue = validator.getValue(formValue);\r\n      const isValid = await validator.method({ formValue, fieldValue });\r\n\r\n      fieldErrors[name] = undefined;\r\n\r\n      if (!isValid) {\r\n        const { message } = validator;\r\n\r\n        failedValidator = validator;\r\n        newErrors[name] = message;\r\n        fieldErrors[name] = message;\r\n        break;\r\n      }\r\n    }\r\n\r\n    const isValid = !failedValidator;\r\n\r\n    if (isValid) {\r\n      if (newErrors && newErrors[name]) {\r\n        delete newErrors[name];\r\n      }\r\n    }\r\n\r\n    newErrors = hasKeys(newErrors) ? newErrors : null;\r\n\r\n    if (!detectIsDeepEqual(newErrors, errors)) {\r\n      setErrors(newErrors);\r\n      lift({ from: 'validateField', value: fieldErrors });\r\n    }\r\n\r\n    onValidate({ formValue, errors: newErrors, isValid });\r\n\r\n    return isValid;\r\n  });\r\n\r\n  const lift = useEvent((lifted: Lifted) => {\r\n    if (detecIsFunction(onLift)) {\r\n      onLift(lifted);\r\n    } else {\r\n      const map: Record<Lifted['from'], () => void> = {\r\n        validate: () => {\r\n          const { skipUpdate } = lifted;\r\n          const liftedErrors = lifted.value as Record<string, string>;\r\n\r\n          if (skipUpdate) {\r\n            state.accumulatedErrors.push(liftedErrors);\r\n          } else {\r\n            const errors = state.accumulatedErrors.filter(Boolean);\r\n            const mergedErrors = mergeArrayToObject<string, {}>(errors, HAS_REPEATER_VALIDATION_ERROR);\r\n            const newErrors = hasKeys(mergedErrors) ? mergedErrors : null;\r\n\r\n            state.accumulatedErrors = [];\r\n            setErrors(newErrors);\r\n          }\r\n        },\r\n        validateField: () => {\r\n          const liftedErrors = lifted.value as Record<string, string | undefined>;\r\n          const keys = Object.keys(liftedErrors);\r\n          let newErrors: Record<string, string> = { ...(errors || {}) };\r\n\r\n          for (const key of keys) {\r\n            if (liftedErrors[key] !== HAS_REPEATER_VALIDATION_ERROR) {\r\n              newErrors[key] = liftedErrors[key];\r\n            }\r\n          }\r\n\r\n          removePropertyValues(newErrors, undefined);\r\n          newErrors = hasKeys(newErrors) ? newErrors : null;\r\n\r\n          if (!detectIsDeepEqual(newErrors, errors)) {\r\n            setErrors(newErrors);\r\n          }\r\n        },\r\n      };\r\n\r\n      map[lifted.from] && map[lifted.from]();\r\n    }\r\n  });\r\n\r\n  const submit = useEvent(async () => {\r\n    const { formValue } = scope;\r\n    const isValid = await validate(formValue);\r\n\r\n    isValid && onSubmit({ formValue });\r\n  });\r\n\r\n  const addSubscriber = useEvent((subscriber: () => void) => {\r\n    state.subscribers.push(subscriber);\r\n  });\r\n\r\n  const removeSubscriber = useEvent((subscriber: () => void) => {\r\n    const idx = state.subscribers.findIndex(x => x === subscriber);\r\n\r\n    if (idx !== -1) {\r\n      state.subscribers.splice(idx, 1);\r\n    }\r\n  });\r\n\r\n  const addValidator = useEvent((validator: SyntheticValidator) => {\r\n    state.validators.push(validator);\r\n  });\r\n\r\n  const removeValidator = useEvent((validator: SyntheticValidator) => {\r\n    const idx = state.validators.findIndex(x => x === validator);\r\n\r\n    if (idx !== -1) {\r\n      state.validators.splice(idx, 1);\r\n    }\r\n  });\r\n\r\n  const addResetFn = useEvent((fn: () => void) => {\r\n    state.resetFns.push(fn);\r\n  });\r\n\r\n  const removeResetFn = useEvent((fn: () => void) => {\r\n    const idx = state.resetFns.findIndex(x => x === fn);\r\n\r\n    if (idx !== -1) {\r\n      state.resetFns.splice(idx, 1);\r\n    }\r\n  });\r\n\r\n  const state = useMemo<FormState<T>>(\r\n    () => ({\r\n      formValue,\r\n      errors,\r\n      inProcess,\r\n      modify,\r\n      notify,\r\n      validate,\r\n      validateField,\r\n      submit,\r\n      reset,\r\n      addSubscriber,\r\n      removeSubscriber,\r\n      addValidator,\r\n      removeValidator,\r\n      addResetFn,\r\n      removeResetFn,\r\n      lift,\r\n      subscribers: [],\r\n      validators: [],\r\n      resetFns: [],\r\n      accumulatedErrors: [],\r\n    }),\r\n    [],\r\n  );\r\n\r\n  state.formValue = formValue;\r\n  state.errors = errors;\r\n  state.inProcess = inProcess;\r\n  state.modify = modify;\r\n  state.notify = notify;\r\n  state.validate = validate;\r\n  state.validateField = validateField;\r\n  state.submit = submit;\r\n  state.reset = reset;\r\n  state.lift = lift;\r\n\r\n  const value = useMemo<FormContextValue<T>>(() => ({ state }), [formValue, errors]);\r\n\r\n  useImperativeHandle(connectedRef, () => {\r\n    const ref: FormRef<T> = {\r\n      getFormValue: () => state.formValue,\r\n      modify,\r\n      validate,\r\n      submit,\r\n      reset,\r\n    };\r\n\r\n    return ref;\r\n  });\r\n\r\n  return (\r\n    <FormContext.Provider value={value}>\r\n      {children({ formValue, errors, inProcess, validate, reset, submit })}\r\n    </FormContext.Provider>\r\n  );\r\n}\r\n\r\nconst FormComponent: React.FC<FormProps<{}>> = Form;\r\n\r\nFormComponent.defaultProps = {\r\n  onValidate: () => {},\r\n  onChange: () => {},\r\n};\r\n\r\nexport type FormRef<T extends object> = {\r\n  getFormValue: () => T;\r\n  modify: (formValue: T) => void;\r\n  validate: (formValue: T, isChild?: boolean) => Promise<boolean>;\r\n  submit: () => void;\r\n  reset: () => void;\r\n};\r\n\r\nexport type FormState<T extends object> = {\r\n  formValue: T;\r\n  errors: Record<string, string> | null;\r\n  inProcess: boolean;\r\n  subscribers: Array<() => void>;\r\n  validators: Array<SyntheticValidator>;\r\n  resetFns: Array<() => void>;\r\n  notify: (formValue: T) => void;\r\n  addSubscriber: (subscriber: () => void) => void;\r\n  removeSubscriber: (subscriber: () => void) => void;\r\n  addValidator: (validator: SyntheticValidator) => void;\r\n  removeValidator: (validator: SyntheticValidator) => void;\r\n  addResetFn: (fn: () => void) => void;\r\n  removeResetFn: (fn: () => void) => void;\r\n  validateField: (options: ValidateFieldOptions<T>) => Promise<boolean>;\r\n  lift: (lifted: Lifted) => void;\r\n  accumulatedErrors: Array<Record<string, string>>;\r\n} & Pick<FormRef<T>, 'modify' | 'validate' | 'submit' | 'reset'>;\r\n\r\ntype ValidateFieldOptions<T extends object> = {\r\n  name: string;\r\n  formValue: T;\r\n  validators: Array<SyntheticValidator>;\r\n};\r\n\r\ntype SharedCallbackOptions<T extends object> = {\r\n  formValue: T;\r\n};\r\n\r\nexport type FormChildrenOptions<T extends object> = {\r\n  errors: Record<string, string>;\r\n  inProcess: boolean;\r\n} & SharedCallbackOptions<T> &\r\n  Pick<FormRef<T>, 'validate' | 'submit' | 'reset'>;\r\n\r\nexport type OnSubmitOptions<T extends object> = {} & SharedCallbackOptions<T>;\r\n\r\nexport type OnValidateOptions<T extends object> = {\r\n  isValid: boolean;\r\n  errors: Record<string, string> | null;\r\n} & SharedCallbackOptions<T>;\r\n\r\nexport type OnChangeOptions<T extends object> = {} & SharedCallbackOptions<T>;\r\n\r\ntype Lifted<T = unknown> = {\r\n  from: 'validateField' | 'validate';\r\n  value?: T;\r\n  skipUpdate?: boolean;\r\n};\r\n\r\nexport { Form };\r\n","import React, { memo, useEffect, useMemo, useRef } from 'react';\r\n\r\nimport { useFormContext } from './context';\r\nimport { type Validator, type SyntheticValidator, type OnValidateFieldOptions } from './validators';\r\nimport { useUpdate, useEvent } from './hooks';\r\n\r\nexport type FieldProps<T, S extends object> = {\r\n  name: string;\r\n  getValue: (formValue: S) => T;\r\n  setValue: (formValue: S, fieldValue: T) => void;\r\n  validators?: Array<Validator<T, S>>;\r\n  updatingKey?: string | number;\r\n  enableOnChangeValidation?: boolean;\r\n  children: (options: FieldChildrenOptions<T>) => React.ReactElement;\r\n  onValidate?: (options: OnValidateFieldOptions<T>) => void;\r\n};\r\n\r\nfunction Field<T, S extends object>(props: FieldProps<T, S>): React.ReactElement {\r\n  const {\r\n    name,\r\n    getValue,\r\n    setValue,\r\n    validators: sourceValidators = [],\r\n    updatingKey: externalUpdatingKey = '',\r\n    enableOnChangeValidation,\r\n    onValidate,\r\n  } = props;\r\n  const { state: formState } = useFormContext<S>();\r\n  const { formValue, errors, inProcess, addValidator, removeValidator, lift } = formState;\r\n  const { update } = useUpdate();\r\n  const value = getValue(formValue);\r\n  const nodeRef = useRef<HTMLElement>(null);\r\n  const error = errors ? errors[name] || null : null;\r\n  const valueID = useMemo(() => getNextValueID(), [value]);\r\n  const scope = useMemo<FieldScope<T>>(() => ({ validators: [] }), []);\r\n  const updatingKey = `${externalUpdatingKey}:${valueID}:${error}:${inProcess}`;\r\n\r\n  useEffect(() => {\r\n    const createValidators = () => {\r\n      const validators: Array<SyntheticValidator> = sourceValidators.map(validator => {\r\n        return {\r\n          ...validator,\r\n          name,\r\n          getValue,\r\n          nodeRef,\r\n          onValidate,\r\n        };\r\n      });\r\n\r\n      return validators;\r\n    };\r\n\r\n    scope.validators = createValidators();\r\n    scope.validators.forEach(x => addValidator(x));\r\n\r\n    return () => {\r\n      scope.validators.forEach(x => removeValidator(x));\r\n      scope.validators = [];\r\n    };\r\n  }, [name]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      lift({ from: 'validateField', value: { [name]: undefined } });\r\n    };\r\n  }, []);\r\n\r\n  const handleChange = useEvent((value: T) => {\r\n    const { formValue, notify } = formState;\r\n\r\n    setValue(formValue, value);\r\n    notify(formValue);\r\n    update();\r\n    enableOnChangeValidation && (async () => await validate())();\r\n  });\r\n\r\n  const validate = useEvent(async (): Promise<boolean> => {\r\n    const { formValue, validateField } = formState;\r\n    const validators = scope.validators;\r\n    const isValid =\r\n      validators.length === 0 ? await Promise.resolve(true) : await validateField({ name, formValue, validators });\r\n\r\n    return isValid;\r\n  });\r\n\r\n  return (\r\n    <FieldInner\r\n      {...props}\r\n      updatingKey={updatingKey}\r\n      nodeRef={nodeRef}\r\n      value={value}\r\n      error={error}\r\n      validate={validate}\r\n      onChange={handleChange}\r\n    />\r\n  );\r\n}\r\n\r\nconst FieldComponent: React.FC<FieldProps<unknown, {}>> = Field;\r\n\r\nFieldComponent.defaultProps = {\r\n  onValidate: () => {},\r\n};\r\n\r\ntype FieldScope<T> = {\r\n  validators: Array<SyntheticValidator>;\r\n};\r\n\r\nexport type FieldInnerProps<T, S extends object> = {\r\n  updatingKey: string;\r\n} & FieldProps<T, S> &\r\n  FieldChildrenOptions<T>;\r\n\r\nconst FieldInner = memo(\r\n  function <T, S extends object>(props: FieldInnerProps<T, S>): React.ReactElement {\r\n    const { name, nodeRef, value, error, children, validate, onChange } = props;\r\n\r\n    return children({ name, nodeRef, value, error, validate, onChange });\r\n  },\r\n  (prevProps, nextProps) => prevProps.updatingKey === nextProps.updatingKey,\r\n);\r\n\r\nexport type FieldChildrenOptions<T> = {\r\n  name: string;\r\n  value: T;\r\n  error: string | null;\r\n  validate: () => Promise<boolean>;\r\n  onChange: (value: T) => void;\r\n} & Pick<OnValidateFieldOptions<T>, 'nodeRef'>;\r\n\r\nlet nextValueID = 0;\r\n\r\nconst getNextValueID = () => ++nextValueID;\r\n\r\nexport { Field, type OnValidateFieldOptions };\r\n","import React, { useRef, useEffect, useMemo, useImperativeHandle } from 'react';\r\n\r\nimport { useFormContext } from './context';\r\nimport { Form, type OnChangeOptions, type FormRef, type FormChildrenOptions } from './form';\r\nimport { HAS_REPEATER_VALIDATION_ERROR, detecIsFunction, dummy, transformOjectToArray } from './utils';\r\nimport { type SyntheticValidator } from './validators';\r\nimport { useEvent } from './hooks';\r\n\r\nexport type RepeaterProps<T extends object, S extends object> = {\r\n  name: string;\r\n  connectedRef?: React.Ref<RepeaterRef<T>>;\r\n  getValue: (formValue: S) => Array<T>;\r\n  setValue: (formValue: S, fieldValue: Array<T>) => void;\r\n  getKey: (formValue: T) => Key;\r\n  interruptValidation?: boolean;\r\n  triggerPosition?: 'before' | 'after';\r\n  renderTrigger?: (options: RenderTriggerOptions<T>) => React.ReactElement;\r\n  children: (options: RepeaterChildrenOptions<T>) => React.ReactElement;\r\n};\r\n\r\nfunction Repeater<T extends object, S extends object>(props: RepeaterProps<T, S>): React.ReactElement {\r\n  const {\r\n    name,\r\n    connectedRef,\r\n    getValue,\r\n    setValue,\r\n    getKey,\r\n    interruptValidation,\r\n    renderTrigger,\r\n    triggerPosition,\r\n    children,\r\n  } = props;\r\n  const { state: formState } = useFormContext<S>();\r\n  const { formValue, modify, notify, inProcess, addValidator, removeValidator, addResetFn, removeResetFn, lift } =\r\n    formState;\r\n  const items = getValue(formValue);\r\n  const formRefs = useRef<Record<string, FormRef<T>>>({});\r\n  const scope = useMemo(() => ({ shouldFocusIdx: -1 }), []);\r\n\r\n  useEffect(() => {\r\n    const method = async () => {\r\n      const results: Array<boolean> = [];\r\n      const refs = transformOjectToArray(formRefs.current);\r\n\r\n      for (const ref of refs) {\r\n        const isValid = await ref.validate(ref.getFormValue(), true);\r\n\r\n        results.push(isValid);\r\n\r\n        if (!isValid && interruptValidation) {\r\n          break;\r\n        }\r\n      }\r\n\r\n      const isValid = results.every(x => x);\r\n\r\n      return isValid;\r\n    };\r\n\r\n    const validator: SyntheticValidator = {\r\n      name,\r\n      method,\r\n      message: HAS_REPEATER_VALIDATION_ERROR,\r\n      getValue: () => null,\r\n    };\r\n\r\n    addValidator(validator);\r\n\r\n    return () => removeValidator(validator);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const resetFn = () => {\r\n      const refs = transformOjectToArray(formRefs.current);\r\n\r\n      refs.forEach(ref => ref.reset());\r\n    };\r\n\r\n    addResetFn(resetFn);\r\n\r\n    return () => removeResetFn(resetFn);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    scope.shouldFocusIdx = -1;\r\n  });\r\n\r\n  const handleUnmount = (key: Key) => () => {\r\n    delete formRefs.current[key];\r\n  };\r\n\r\n  const handleChange =\r\n    (idx: number) =>\r\n    ({ formValue: item }: OnChangeOptions<T>) => {\r\n      const items = getValue(formValue);\r\n\r\n      items[idx] = item;\r\n      setValue(formValue, items);\r\n      notify(formValue);\r\n    };\r\n\r\n  const append = useEvent((item: T, shouldFocus?: boolean) => {\r\n    const items = getValue(formValue);\r\n\r\n    items.push(item);\r\n    setValue(formValue, items);\r\n    modify(formValue);\r\n    shouldFocus && (scope.shouldFocusIdx = items.length - 1);\r\n  });\r\n\r\n  const prepend = useEvent((item: T, shouldFocus?: boolean) => {\r\n    const items = getValue(formValue);\r\n\r\n    items.unshift(item);\r\n    setValue(formValue, items);\r\n    modify(formValue);\r\n    shouldFocus && (scope.shouldFocusIdx = 0);\r\n  });\r\n\r\n  const insert = useEvent((idx: number, item: T, shouldFocus?: boolean) => {\r\n    const items = getValue(formValue);\r\n\r\n    items.splice(idx, 0, item);\r\n    setValue(formValue, items);\r\n    modify(formValue);\r\n    shouldFocus && (scope.shouldFocusIdx = idx);\r\n  });\r\n\r\n  const swap = useEvent((from: number, to: number) => {\r\n    const items = getValue(formValue);\r\n    const itemFrom = items[from];\r\n    const itemTo = items[to];\r\n\r\n    if (!itemFrom || !itemTo) return;\r\n\r\n    items[from] = itemTo;\r\n    items[to] = itemFrom;\r\n    setValue(formValue, items);\r\n    modify(formValue);\r\n  });\r\n\r\n  const remove = useEvent((sourceIdx: number | Array<number>) => {\r\n    const idxs = Array.isArray(sourceIdx) ? sourceIdx : [sourceIdx];\r\n    const items = getValue(formValue);\r\n\r\n    for (const idx of idxs) {\r\n      items.splice(idx, 1);\r\n    }\r\n\r\n    setValue(formValue, items);\r\n    modify(formValue);\r\n  });\r\n\r\n  useImperativeHandle(connectedRef, () => {\r\n    const ref: RepeaterRef<T> = {\r\n      append,\r\n      prepend,\r\n      insert,\r\n      swap,\r\n      remove,\r\n    };\r\n\r\n    return ref;\r\n  });\r\n\r\n  const isAfter = triggerPosition === 'after';\r\n  const isBefore = !isAfter;\r\n  const isSingle = items.length === 1;\r\n  const size = items.length;\r\n\r\n  return (\r\n    <>\r\n      {isBefore &&\r\n        detecIsFunction(renderTrigger) &&\r\n        renderTrigger({ size, append, prepend, insert, swap, remove, inProcess })}\r\n      {items.map((item, idx) => {\r\n        const key = getKey(item);\r\n        const isFirst = idx === 0;\r\n        const isLast = idx === items.length - 1;\r\n        const isEven = idx % 2 === 0;\r\n        const isOdd = !isEven;\r\n        const shouldFocus = scope.shouldFocusIdx === idx;\r\n        const setRef = (ref: FormRef<T>) => {\r\n          formRefs.current[key] = ref;\r\n        };\r\n\r\n        return (\r\n          <Form\r\n            key={key}\r\n            connectedRef={setRef}\r\n            initialFormValue={item}\r\n            onChange={handleChange(idx)}\r\n            onUnmount={handleUnmount(key)}\r\n            onLift={lift}\r\n            onSubmit={dummy}>\r\n            {({ formValue, errors, inProcess }) => {\r\n              return children({\r\n                key,\r\n                idx,\r\n                isFirst,\r\n                isLast,\r\n                isEven,\r\n                isOdd,\r\n                isSingle,\r\n                size,\r\n                shouldFocus,\r\n                formValue,\r\n                errors,\r\n                inProcess,\r\n                remove,\r\n              });\r\n            }}\r\n          </Form>\r\n        );\r\n      })}\r\n      {isAfter &&\r\n        detecIsFunction(renderTrigger) &&\r\n        renderTrigger({ size, append, prepend, insert, swap, remove, inProcess })}\r\n    </>\r\n  );\r\n}\r\n\r\nconst RepeaterComponent: React.FC<RepeaterProps<{}, {}>> = Repeater;\r\n\r\nRepeaterComponent.defaultProps = {\r\n  triggerPosition: 'after',\r\n};\r\n\r\nexport type RepeaterChildrenOptions<T extends object> = {\r\n  key: Key;\r\n  idx: number;\r\n  isFirst: boolean;\r\n  isLast: boolean;\r\n  isEven: boolean;\r\n  isOdd: boolean;\r\n  isSingle: boolean;\r\n  size: number;\r\n  shouldFocus: boolean;\r\n  remove: (idx: number | Array<number>) => void;\r\n} & Pick<FormChildrenOptions<T>, 'formValue' | 'errors' | 'inProcess'>;\r\n\r\nexport type RenderTriggerOptions<T extends object> = {\r\n  size: number;\r\n  append: (item: T, shouldFocus?: boolean) => void;\r\n  prepend: (item: T, shouldFocus?: boolean) => void;\r\n  insert: (idx: number, item: T, shouldFocus?: boolean) => void;\r\n  swap: (from: number, to: number) => void;\r\n} & Pick<FormChildrenOptions<T>, 'inProcess'> &\r\n  Pick<RepeaterChildrenOptions<T>, 'remove'>;\r\n\r\nexport type RepeaterRef<T extends object> = {} & Pick<\r\n  RenderTriggerOptions<T>,\r\n  'append' | 'prepend' | 'insert' | 'swap' | 'remove'\r\n>;\r\n\r\ntype Key = string | number;\r\n\r\nexport { Repeater };\r\n","import React, { useMemo } from 'react';\r\n\r\nimport { useFormState } from './hooks';\r\n\r\nexport type DebuggerProps = {};\r\n\r\nconst Debugger: React.FC<DebuggerProps> = () => {\r\n  const { formValue, errors } = useFormState();\r\n  const style: React.CSSProperties = useMemo(\r\n    () => ({\r\n      display: 'block',\r\n      backgroundColor: '#efefef',\r\n      padding: 16,\r\n      marginTop: 16,\r\n      marginBottom: 16,\r\n    }),\r\n    [],\r\n  );\r\n  const value = useMemo(\r\n    () =>\r\n      JSON.stringify(\r\n        {\r\n          errors,\r\n          formValue,\r\n        },\r\n        null,\r\n        2,\r\n      ),\r\n    [formValue, errors],\r\n  );\r\n\r\n  return <pre style={style}>{value}</pre>;\r\n};\r\n\r\nexport { Debugger };\r\n"],"names":["root","factory","exports","module","require","define","amd","self","__WEBPACK_EXTERNAL_MODULE__787__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","HAS_REPEATER_VALIDATION_ERROR","clone","isObject","cloned","Array","isArray","keys","forEach","detecIsFunction","dummy","hasKeys","length","detectIsDeepEqual","o1","o2","JSON","stringify","transformOjectToArray","items","push","FormContext","createContext","useFormContext","useContext","Error","useEvent","fn","scope","useMemo","callback","useCallback","args","useUpdate","useState","forceUpdate","update","x","useFormState","formValue","errors","inProcess","addSubscriber","removeSubscriber","addValidator","removeValidator","modify","sourceValidate","submit","reset","validate","useEffect","Form","props","initialFormValue","connectedRef","interruptValidation","children","onValidate","onChange","onUnmount","onLift","onSubmit","setErrors","setInProcess","notify","isRoot","state","subscribers","setTimeout","resetFns","isChild","results","validators","newErrors","process","validator","fieldValue","getValue","method","isValid","nodeRef","name","message","every","lift","from","skipUpdate","Promise","resolve","requestAnimationFrame","validateField","options","failedValidator","fieldErrors","lifted","map","liftedErrors","accumulatedErrors","mergedErrors","exclude","item","mergeArrayToObject","filter","Boolean","subscriber","idx","findIndex","splice","addResetFn","removeResetFn","useImperativeHandle","getFormValue","Provider","defaultProps","Field","setValue","sourceValidators","externalUpdatingKey","enableOnChangeValidation","formState","useRef","error","valueID","getNextValueID","updatingKey","handleChange","FieldInner","memo","prevProps","nextProps","nextValueID","Repeater","getKey","renderTrigger","triggerPosition","formRefs","shouldFocusIdx","refs","current","ref","resetFn","handleUnmount","append","shouldFocus","prepend","unshift","insert","swap","to","itemFrom","itemTo","remove","sourceIdx","idxs","isAfter","isBefore","isSingle","size","isFirst","isLast","isEven","isOdd","Debugger","style","display","backgroundColor","padding","marginTop","marginBottom"],"sourceRoot":""}