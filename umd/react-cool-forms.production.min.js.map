{"version":3,"file":"react-cool-forms.production.min.js","mappings":"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","sources":["webpack://ReactCoolForms/webpack/universalModuleDefinition","webpack://ReactCoolForms/external umd {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}","webpack://ReactCoolForms/webpack/bootstrap","webpack://ReactCoolForms/webpack/runtime/compat get default export","webpack://ReactCoolForms/webpack/runtime/define property getters","webpack://ReactCoolForms/webpack/runtime/hasOwnProperty shorthand","webpack://ReactCoolForms/webpack/runtime/make namespace object","webpack://ReactCoolForms/./src/utils.ts","webpack://ReactCoolForms/./src/form.tsx","webpack://ReactCoolForms/./src/field.tsx"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"ReactCoolForms\", [\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReactCoolForms\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"ReactCoolForms\"] = factory(root[\"React\"]);\n})(self, (__WEBPACK_EXTERNAL_MODULE__787__) => {\nreturn ","module.exports = __WEBPACK_EXTERNAL_MODULE__787__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","function clone<T extends object | Array<any>>(value: T): T {\r\n  const isObject = typeof value === 'object';\r\n  const cloned = isObject ? (Array.isArray(value) ? [...value] : value ? { ...value } : value) : value;\r\n\r\n  cloned && isObject && Object.keys(cloned).forEach(key => (cloned[key] = clone(cloned[key])));\r\n\r\n  return cloned as unknown as T;\r\n}\r\n\r\nexport { clone };\r\n","import React, { createContext, useContext, useMemo, useState, useImperativeHandle, useCallback } from 'react';\r\n\r\nimport { clone } from './utils';\r\nimport { type SyntheticFormValidator } from './validators';\r\n\r\nexport type FormProps<T extends object = any> = {\r\n  initialValue: T;\r\n  connectedRef?: React.RefObject<FormRef<T>>;\r\n  interruptValidation?: boolean;\r\n  children: (options: FormChildrenOptions<T>) => React.ReactElement;\r\n  onValidate?: (options: OnValidationOptions<T>) => void;\r\n  onChange?: (options: OnChangeOptions<T>) => void;\r\n  onSubmit: (options: OnSubmitOptions<T>) => void;\r\n};\r\n\r\nfunction Form<T extends object>(props: FormProps<T>): React.ReactElement {\r\n  const { initialValue, connectedRef, interruptValidation, children, onValidate, onChange, onSubmit } = props;\r\n  const [formValue, setFormValue] = useState<T>(clone(initialValue));\r\n  const [errors, setErrors] = useState<Record<string, string>>(null);\r\n  const [isSubmiting, setIsSubmiting] = useState(false);\r\n\r\n  const modify = useCallback(\r\n    (formValue: T) => {\r\n      const newFormValue = { ...formValue };\r\n\r\n      setFormValue(newFormValue);\r\n      onChange({ formValue: newFormValue });\r\n    },\r\n    [onChange],\r\n  );\r\n\r\n  const reset = useCallback(() => {\r\n    setErrors(null);\r\n    modify(clone(initialValue));\r\n  }, [onChange]);\r\n\r\n  const validate = useCallback(\r\n    (formValue: T): Promise<boolean> => {\r\n      return new Promise(async resolve => {\r\n        let newErrors: Record<string, string> = null;\r\n        const validationResults: Array<boolean> = [];\r\n\r\n        if (scope.validators.length === 0) {\r\n          newErrors && setErrors(null);\r\n          onValidate({ formValue, errors: null, isValid: true });\r\n\r\n          return resolve(true);\r\n        }\r\n\r\n        for (const validator of scope.validators) {\r\n          const value = validator.getValue(formValue);\r\n          const isValid = await validator.method({ formValue, value });\r\n\r\n          validationResults.push(isValid);\r\n\r\n          if (!isValid) {\r\n            if (!newErrors) {\r\n              newErrors = {};\r\n            }\r\n            if (!newErrors[validator.name]) {\r\n              newErrors[validator.name] = validator.message;\r\n            }\r\n            if (interruptValidation) {\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        const isValid = validationResults.every(x => x);\r\n\r\n        if (isValid) {\r\n          errors && setErrors(null);\r\n        } else {\r\n          setErrors({ ...newErrors });\r\n        }\r\n\r\n        onValidate({ formValue, errors: newErrors, isValid });\r\n        resolve(isValid);\r\n      });\r\n    },\r\n    [errors, onValidate],\r\n  );\r\n\r\n  const submit = useCallback(() => {\r\n    setIsSubmiting(true);\r\n    validate(formValue).then(isValid => {\r\n      isValid && onSubmit({ formValue });\r\n      setIsSubmiting(false);\r\n    });\r\n  }, [formValue]);\r\n\r\n  const scope = useMemo<FormScope<T>>(\r\n    () => ({ formValue, errors, isSubmiting, modify, validate, submit, reset, validators: [] }),\r\n    [],\r\n  );\r\n\r\n  scope.formValue = formValue;\r\n  scope.errors = errors;\r\n  scope.isSubmiting = isSubmiting;\r\n  scope.modify = modify;\r\n  scope.validate = validate;\r\n  scope.submit = submit;\r\n  scope.reset = reset;\r\n\r\n  const value = useMemo<FormStateContextValue<T>>(() => ({ scope }), [formValue, errors]);\r\n\r\n  useImperativeHandle(connectedRef, () => ({\r\n    getFormValue: () => formValue,\r\n    modify,\r\n    validate,\r\n    submit,\r\n    reset,\r\n  }));\r\n\r\n  return (\r\n    <FormStateContext.Provider value={value}>\r\n      {children({ formValue, errors, isSubmiting, reset, submit })}\r\n    </FormStateContext.Provider>\r\n  );\r\n}\r\n\r\nconst FormComponent: React.FC<FormProps> = Form;\r\n\r\nFormComponent.defaultProps = {\r\n  onValidate: () => {},\r\n  onChange: () => {},\r\n};\r\n\r\nconst FormStateContext = createContext<FormStateContextValue>(null);\r\n\r\nfunction useFormScope<T extends object>() {\r\n  const value = useContext<FormStateContextValue<T>>(FormStateContext);\r\n\r\n  return value;\r\n}\r\n\r\nfunction useFormState<T extends object>() {\r\n  const { scope } = useContext<FormStateContextValue<T>>(FormStateContext);\r\n\r\n  return { ...scope };\r\n}\r\n\r\nexport type FormRef<T extends object> = {\r\n  getFormValue: () => T;\r\n  modify: (formValue: T) => void;\r\n  validate: (formValue: T) => Promise<boolean>;\r\n  submit: () => void;\r\n  reset: () => void;\r\n};\r\n\r\nexport type FormScope<T extends object> = {\r\n  formValue: T;\r\n  errors: Record<string, string> | null;\r\n  validators: Array<SyntheticFormValidator>;\r\n  isSubmiting: boolean;\r\n} & Pick<FormRef<T>, 'modify' | 'validate' | 'submit' | 'reset'>;\r\n\r\ntype FormStateContextValue<T extends object = any> = {\r\n  scope: FormScope<T>;\r\n};\r\n\r\ntype SharedCallbackOptions<T extends object> = {\r\n  formValue: T;\r\n};\r\n\r\ntype FormChildrenOptions<T extends object> = {\r\n  errors: Record<string, string>;\r\n  isSubmiting: boolean;\r\n} & SharedCallbackOptions<T> &\r\n  Pick<FormRef<T>, 'submit' | 'reset'>;\r\n\r\ntype OnSubmitOptions<T extends object> = {} & SharedCallbackOptions<T>;\r\n\r\ntype OnValidationOptions<T extends object> = {\r\n  isValid: boolean;\r\n  errors: Record<string, string> | null;\r\n} & SharedCallbackOptions<T>;\r\n\r\ntype OnChangeOptions<T extends object> = {} & SharedCallbackOptions<T>;\r\n\r\nexport { Form, useFormScope, useFormState };\r\n","import React, { useCallback, memo, useEffect } from 'react';\r\n\r\nimport { useFormScope } from './form';\r\nimport { type FormValidator, type SyntheticFormValidator } from './validators';\r\n\r\nexport type FieldProps<T = unknown, S extends object = any> = {\r\n  name: string;\r\n  getValue: (formValue: S) => T;\r\n  setValue: (formValue: S, fieldValue: T) => void;\r\n  validators?: Array<FormValidator<T, S>>;\r\n  updatingKey?: string;\r\n  children: (options: FieldChildrenOptions<T>) => React.ReactElement;\r\n};\r\n\r\nfunction Field<T, S extends object>(props: FieldProps<T, S>): React.ReactElement {\r\n  const { name, getValue, setValue, validators = [], updatingKey: externalUpdatingKey = '' } = props;\r\n  const { scope: formScope } = useFormScope<S>();\r\n  const { formValue, errors, isSubmiting } = formScope;\r\n  const value = getValue(formValue);\r\n  const error = errors ? errors[name] || null : null;\r\n  const updatingKey = `${externalUpdatingKey}:${value}:${error}:${isSubmiting}`;\r\n\r\n  useEffect(() => {\r\n    const syntheticValidators = validators.map(x => {\r\n      const validator: SyntheticFormValidator = {\r\n        ...x,\r\n        name,\r\n        getValue,\r\n      };\r\n\r\n      return validator;\r\n    });\r\n    formScope.validators.push(...syntheticValidators);\r\n\r\n    return () => {\r\n      const [validator] = syntheticValidators;\r\n      const idx = formScope.validators.findIndex(x => x === validator);\r\n\r\n      if (idx !== -1) {\r\n        formScope.validators.splice(idx, validators.length);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const handleChange = useCallback((value: T) => {\r\n    const { formValue, modify } = formScope;\r\n\r\n    setValue(formValue, value);\r\n    modify(formValue);\r\n  }, []);\r\n\r\n  return <FieldInner {...props} updatingKey={updatingKey} value={value} error={error} onChange={handleChange} />;\r\n}\r\n\r\nexport type FieldInnerProps<T = unknown, S extends object = any> = {\r\n  updatingKey: string;\r\n} & FieldProps<T, S> &\r\n  FieldChildrenOptions<T>;\r\n\r\nconst FieldInner = memo(\r\n  function <T, S extends object>(props: FieldInnerProps<T, S>): React.ReactElement {\r\n    const { value, error, children, onChange } = props;\r\n\r\n    return children({ value, error, onChange });\r\n  },\r\n  (prevProps, nextProps) => prevProps.updatingKey === nextProps.updatingKey,\r\n);\r\n\r\ntype FieldChildrenOptions<T = unknown> = {\r\n  value: T;\r\n  error: string | null;\r\n  onChange: (value: T) => void;\r\n};\r\n\r\nexport { Field };\r\n"],"names":["root","factory","exports","module","require","define","amd","self","__WEBPACK_EXTERNAL_MODULE__787__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","clone","isObject","cloned","Array","isArray","keys","forEach","Form","props","initialValue","connectedRef","interruptValidation","children","onValidate","onChange","onSubmit","useState","formValue","setFormValue","errors","setErrors","isSubmiting","setIsSubmiting","modify","useCallback","newFormValue","reset","validate","Promise","resolve","newErrors","validationResults","scope","validators","length","isValid","validator","getValue","method","push","name","message","every","x","submit","then","useMemo","useImperativeHandle","getFormValue","FormStateContext","Provider","defaultProps","createContext","useFormScope","useContext","useFormState","Field","setValue","externalUpdatingKey","formScope","error","updatingKey","useEffect","syntheticValidators","map","idx","findIndex","splice","handleChange","FieldInner","memo","prevProps","nextProps"],"sourceRoot":""}